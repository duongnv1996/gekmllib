package pip;

import java.io.File;
import java.io.IOException;

import org.xml.sax.SAXException;

import com.keithpower.gekmlib.Configuration;
import com.keithpower.gekmlib.KMLParser;
import com.keithpower.gekmlib.GroundOverlay;
import com.keithpower.gekmlib.Node;

/**
 * Simple example, showing how to load and print a KML fragment
 * @author Keith Power March 2007
 * @version 0.03
 */

public class LoadFragmentExample
{
    public static void main(String[] args)
    {
	try
	{
	    /**
	     * You probably don't want IDs auto-generated when you're loading
	     * a document. You can always turn it back on later.
	     * NOTE: KML updates will only work for objects that have
	     * an ID (either autogenerated or assigned).
	     */
	    Configuration.properties.setProperty(Configuration.GENERATE_IDS, Configuration.OFF);
	    
	    /**
	     * Load the document into a Kml object.
	     */
	    KMLParser parser = new KMLParser("GroundOverlay", GroundOverlay.class);
	    GroundOverlay ge = (GroundOverlay)parser.parseFragment(new File("groundoverlayfragment.kml"));
	    System.out.println(ge.toKML());	    
	} catch (IOException e)
	{
	    // Just fail
	    System.err.println("Error reading file "+e);
	} catch (SAXException e)
	{
	    // Just fail
	    System.err.println("Error parsing "+e);
	}
    }
    
}
